local oldTerm

local apis = {}

local Extension = function(path, addDot)
	if (not path) then
		return nil
	end
	
	if (not string.find(fs.getName(path), '%.')) then
		if (not addDot) then
			return fs.getName(path)
		else
			return ''
		end
	else
		local _path = path
		
		if (path:sub(#path) == '/') then
			_path = path:sub(1, #path - 1)
		end
		
		local ext = _path:gmatch('\[0-9a-z]+$')()
		
		if (ext) then
			ext = ext:sub(2)
		else
			return ''
		end
		
		if (addDot) then
			ext = '.' .. ext
		end
		
		return ext:lower()
	end
end

local RemoveExtension = function(path)
	if path:sub(1,1) == '.' then
		return path
	end
	
	local extension = Extension(path)
	
	if extension == path then
		return fs.getName(path)
	end
	
	return string.gsub(path, extension, ''):sub(1, -2)
end

function LoadApis(path)
	local name = RemoveExtension(fs.getName(path))
	
	if (apis[name] == true) then
		printError("API " .. name .. " is already being loaded.")
		
		return false
	end
	
	apis[name] = true
	
	local tEnv = {}
	setmetatable(tEnv, { __index = getfenv() })
	
	local fnApi, err = loadfile(path)
	
	if fnApi then
		setfenv(fnApi, tEnv)
		fnApi()
	else
		printError(err)
		apis[name] = nil
		
		return false
	end
	
	local api = {}
	
	for k, v in pairs(tEnv) do
		api[k] = v
		
		print(k .. " = " .. v)
	end
end

function main()
	oldTerm = term
	
	registerAPIs()
	
	-- Now run main.
	os.run(getfenv(), "/System/main.lua")
end

function registerAPIs()
	local list = fs.list("/System/API")
	
	for i, api in pairs(list) do
		os.loadAPI("/System/API/" .. api)
	end
end

main()